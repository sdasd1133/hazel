"use client";

import Link from "next/link";
import Image from "next/image";
import { useCartStore } from "@/lib/cartStore";
import { Trash2 } from "lucide-react";
import { Button } from "@/components/ui/button";
import AuthCheck from "@/components/auth-check";

export default function CartPage() {
  const { items, removeItem, updateQuantity, getTotalPrice } = useCartStore();

  const renderCartContent = () => {
    if (items.length === 0) {
      return (
        <div className="py-12 max-w-md mx-auto">
          <p className="text-gray-500 mb-8">장바구니에 담긴 상품이 없습니다.</p>
          <Link href="/products">
            <Button>쇼핑 계속하기</Button>
          </Link>
        </div>
      );
    }

    return (
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* 상품 목록 */}
        <div className="lg:col-span-2">
          <div className="space-y-4">
            {items.map((item) => (
              <div
                key={`${item.product.id}-${item.selectedSize}-${item.selectedColor}`}
                className="flex border rounded-lg p-4 relative"
              >
                {/* 상품 이미지 */}
                <div className="w-24 h-24 bg-gray-100 rounded-md flex-shrink-0 relative overflow-hidden">
                  {item.product.images[0] ? (
                    <Image
                      src={item.product.images[0]}
                      alt={item.product.name}
                      fill
                      className="object-cover"
                    />
                  ) : (
                    <div className="w-full h-full flex items-center justify-center bg-gray-200">
                      <span className="text-xs text-gray-500">이미지 없음</span>
                    </div>
                  )}
                </div>

                {/* 상품 정보 */}
                <div className="ml-4 flex-grow">
                  <h3 className="font-medium">{item.product.name}</h3>
                  <p className="text-sm text-gray-500 mt-1">
                    {item.selectedSize && `사이즈: ${item.selectedSize}`}
                    {item.selectedSize && item.selectedColor && " / "}
                    {item.selectedColor && `색상: ${item.selectedColor}`}
                  </p>
                  <div className="mt-2 flex items-center justify-between">
                    <div className="flex items-center border rounded-md">
                      <button
                        onClick={() =>
                          updateQuantity(
                            item.product.id,
                            Math.max(1, item.quantity - 1)
                          )
                        }
                        className="px-3 py-1"
                        disabled={item.quantity <= 1}
                      >
                        -
                      </button>
                      <span className="px-3 py-1 min-w-[40px] text-center">
                        {item.quantity}
                      </span>
                      <button
                        onClick={() =>
                          updateQuantity(item.product.id, item.quantity + 1)
                        }
                        className="px-3 py-1"
                      >
                        +
                      </button>
                    </div>
                    <p className="font-medium">
                      {(item.product.price * item.quantity).toLocaleString()}원
                    </p>
                  </div>
                </div>

                {/* 삭제 버튼 */}
                <button
                  onClick={() => removeItem(item.product.id)}
                  className="absolute top-4 right-4 text-gray-400 hover:text-red-500"
                >
                  <Trash2 size={18} />
                  <span className="sr-only">상품 삭제</span>
                </button>
              </div>
            ))}
          </div>
        </div>

        {/* 주문 요약 */}
        <div className="lg:col-span-1">
          <div className="border rounded-lg p-6 bg-gray-50 sticky top-20">
            <h3 className="text-lg font-bold mb-4">주문 요약</h3>

            <div className="space-y-2 mb-4">
              <div className="flex justify-between">
                <span>상품 금액</span>
                <span>{getTotalPrice().toLocaleString()}원</span>
              </div>
              <div className="flex justify-between">
                <span>배송비</span>
                <span>
                  {getTotalPrice() >= 70000
                    ? "무료"
                    : (3000).toLocaleString() + "원"}
                </span>
              </div>
            </div>

            <div className="border-t pt-4 mb-6">
              <div className="flex justify-between font-bold">
                <span>총 결제금액</span>
                <span>
                  {(
                    getTotalPrice() +
                    (getTotalPrice() >= 70000 ? 0 : 3000)
                  ).toLocaleString()}
                  원
                </span>
              </div>
            </div>

            <Button className="w-full">결제하기</Button>
          </div>
        </div>
      </div>
    );
  };

  return (
    <AuthCheck>
      <div className="container mx-auto px-4 py-16">
        <h1 className="text-3xl font-bold mb-6">장바구니</h1>
        {renderCartContent()}
      </div>
    </AuthCheck>
  );
}
