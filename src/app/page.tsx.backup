import Link from 'next/link';
import { ShoppingBag, Star, Truck, Shield, ArrowRight } from 'lucide-react';

export default function HomePage() {
  return (
    <div className="min-h-screen bg-white">
      {/* Hero Section */}
      <section className="relative bg-gradient-to-br from-gray-900 via-gray-800 to-blue-900 text-white">
        <div className="absolute inset-0 bg-black opacity-50"></div>
        <div className="relative max-w-7xl mx-auto px-4 py-24 sm:py-32">
          <div className="text-center">
            <h1 className="text-5xl sm:text-6xl font-bold mb-6 bg-gradient-to-r from-white to-blue-200 bg-clip-text text-transparent">
              HAZEL
            </h1>
            <p className="text-xl sm:text-2xl mb-8 text-gray-200 max-w-3xl mx-auto">
              트렌디하고 고품질의 패션을 만나보세요
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Link 
                href="/products" 
                className="bg-blue-600 text-white px-8 py-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors inline-flex items-center justify-center"
              >
                쇼핑하기 <ArrowRight className="ml-2 h-5 w-5" />
              </Link>
              <Link 
                href="/about" 
                className="border-2 border-white text-white px-8 py-4 rounded-lg font-semibold hover:bg-white hover:text-gray-900 transition-colors inline-flex items-center justify-center"
              >
                브랜드 소개
              </Link>
            </div>
          </div>
        </div>
      </section>
          setIsAuthenticated(true);
          console.log('세션으로 인증됨:', session.user.email);
        } else {
          setUser(null);
          setIsAuthenticated(false);
          console.log('세션 없음 - 인증되지 않음');
        }
        setLoading(false);
      }
    );

    // 초기 인증 상태 확인
    checkAuth();
    
    // 페이지가 포커스될 때마다 인증 상태 재확인
    const handleFocus = () => {
      checkAuth();
    };
    
    window.addEventListener('focus', handleFocus);
    
    return () => {
      window.removeEventListener('focus', handleFocus);
      subscription.unsubscribe();
    };
  }, []);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900"></div>
          <p className="mt-4 text-gray-600">로딩 중...</p>
        </div>
      </div>
    );
  }

  return (
    <>
      {/* 히어로 섹션 */}
      <section className="relative h-[600px] md:h-[700px] overflow-hidden bg-gray-900">
        {/* 배경 이미지 */}
        <div className="absolute inset-0 z-0 bg-gradient-to-br from-primary-dark/80 via-black/70 to-black/80"></div>
        <div className="absolute inset-0 z-10 opacity-30 bg-[url('/hero-pattern.svg')]"></div>
        
        {/* 컨텐츠 */}
        <div className="container mx-auto px-4 h-full flex flex-col justify-center items-center relative z-30 text-center">
          <h1 className="text-4xl md:text-6xl font-bold mb-6 text-white">
            오셨습니까 형님!누님!
          </h1>
          
          {/* 디버깅 정보 (개발 시에만 표시) */}
          {process.env.NODE_ENV === 'development' && (
            <div className="mb-4 p-2 bg-black/50 rounded text-white text-sm">
              <p>인증 상태: {isAuthenticated ? '로그인됨' : '로그인 안됨'}</p>
              {user && <p>사용자: {user.email}</p>}
            </div>
          )}
          
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            {isAuthenticated ? (
              <>
                <Link href="/products">
                  <Button variant="gradient" size="lg" rounded className="group min-w-[180px]">
                    쇼핑하기 <ArrowRight size={16} className="ml-2 group-hover:translate-x-1 transition-transform" />
                  </Button>
                </Link>
                <p className="text-white mt-2">
                  환영합니다, {user?.email || '사용자'}님!
                </p>
              </>
            ) : (
              <Button variant="gradient" size="lg" rounded className="group min-w-[220px]" onClick={() => router.push('/login')}>
                로그인하고 쇼핑하기 <ArrowRight size={16} className="ml-2 group-hover:translate-x-1 transition-transform" />
              </Button>
            )}
          </div>
        </div>
      </section>
    </>
  );
}
